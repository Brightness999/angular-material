// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error Stack Testing Will properly figure out invoking function module on error 1`] = `
Object {
  "context": Object {
    "runtime": Object {
      "application": "testLogality",
      "file": "/test/spec/error-stack.test.js",
    },
    "source": Object {
      "file_name": "/test/spec/error-stack.test.js",
    },
    "system": Object {
      "hostname": "localhost",
      "pid": 36255,
      "process_name": "node .",
    },
  },
  "dt": "2018-05-18T16:25:57.815Z",
  "event": Object {
    "error": Object {
      "backtrace": Array [
        Object {
          "file": "/Users/thanpolas/Projects/work/alacrity/logality/test/spec/error-stack.test.js",
          "function": "Object.done",
          "line": "22:13",
        },
        Object {
          "file": "/Users/thanpolas/Projects/work/alacrity/logality/node_modules/jest-jasmine2/build/queue_runner.js",
          "function": "resolve",
          "line": "52:12",
        },
        Object {
          "file": null,
          "function": "new Promise",
          "line": "null:null",
        },
        Object {
          "file": "/Users/thanpolas/Projects/work/alacrity/logality/node_modules/jest-jasmine2/build/queue_runner.js",
          "function": "mapper",
          "line": "39:19",
        },
        Object {
          "file": "/Users/thanpolas/Projects/work/alacrity/logality/node_modules/jest-jasmine2/build/queue_runner.js",
          "function": "promise.then",
          "line": "73:82",
        },
      ],
      "message": "An error did not occur",
      "name": "Error",
    },
  },
  "level": "error",
  "message": "An error happened, maybe?",
  "severity": 3,
}
`;
